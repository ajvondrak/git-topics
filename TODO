git topics setup
  hooks
    prevents untagged master pushes
    post-commit to trigger `git topics finish` in case of merge conflicts

git topics release [major|minor|patch]
  pre-populate tag message with the list of topics that are new to this tag
  delete topics here instead of in `finish`

git topics [status]
  topics that haven't been closed (i.e., branches that haven't been deleted)
  whether they're merged in pu/next/master/maint
  pending release (if there are merges in master but master isn't tagged)
  TODO
    git-rev-parse --parseopt consistently everywhere
    docs
    flags: --remotes, --verbose (default?), --all, --finished, --etc
    how to pass flags without `status` subcommand?
      should `status` even be a subcommand, or just use `git topics` only?

git topics log
  git log --first-parent
  how fancy can this get?

git topics use <name>
  git merge topic/<name>
  presumably invoked while on some other topic branch

git topics experiment <name>...
  clobber pu branch if it exists
  git checkout -b pu master
  git merge --no-ff topic/<name>...
  how fancy can this get?

git topics reintegrate
  git checkout next
  git reset --hard master
  git merge every previously integrated topic
  --interactive
    like git rebase -i, just select which topics you want to reintegrate
  --onto <branch>
    combined with --interactive, could be used to implement `experiment`
  --continue | --skip | --abort | --quit | --edit-todo
    like the counterparts in git rebase

README.md
  Installation
    Figure out how to make this `brew install`-able
    bash completion
    zsh completion
